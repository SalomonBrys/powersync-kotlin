cmake_minimum_required(VERSION 3.18.1)

project(powersync-sqlite)

if(NOT SQLITE3_SRC_DIR)
    set(SQLITE3_SRC_DIR "../../../build/native/sqlite")
endif()

if(SUFFIX)
    set(PACKAGE_NAME "powersync-sqlite_${SUFFIX}")
else()
    message(FATAL_ERROR "SUFFIX not set")
endif()

set(CMAKE_LIBRARY_OUTPUT_DIRECTORY output)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY output)

set(CMAKE_POSITION_INDEPENDENT_CODE ON)

find_package(JNI REQUIRED)
find_package(Threads REQUIRED)

include_directories(${SQLITE3_SRC_DIR})
include_directories(${JNI_INCLUDE_DIRS})

add_library(sqlite3 STATIC
        "${SQLITE3_SRC_DIR}/sqlite3.c"
)

# Flags used by the Xerial SQlite JDBC driver. Using the same flags ensures maximum compatibility.
# See https://github.com/xerial/sqlite-jdbc/blob/533efaec2b1558d67e23ed496e6c32d505acd812/Makefile#L68
target_compile_definitions(
    sqlite3
    PUBLIC SQLITE_ENABLE_LOAD_EXTENSION=1
    PUBLIC SQLITE_HAVE_ISNAN
    PUBLIC HAVE_USLEEP=1
    PUBLIC SQLITE_ENABLE_COLUMN_METADATA
    PUBLIC SQLITE_CORE
    PUBLIC SQLITE_ENABLE_FTS3
    PUBLIC SQLITE_ENABLE_FTS3_PARENTHESIS
    PUBLIC SQLITE_ENABLE_FTS5
    PUBLIC SQLITE_ENABLE_RTREE
    PUBLIC SQLITE_ENABLE_STAT4
    PUBLIC SQLITE_ENABLE_DBSTAT_VTAB
    PUBLIC SQLITE_ENABLE_MATH_FUNCTIONS
    PUBLIC SQLITE_THREADSAFE=1
    PUBLIC SQLITE_DEFAULT_MEMSTATUS=0
    PUBLIC SQLITE_DEFAULT_FILE_PERMISSIONS=0666
    PUBLIC SQLITE_MAX_VARIABLE_NUMBER=250000
    PUBLIC SQLITE_MAX_MMAP_SIZE=1099511627776
    PUBLIC SQLITE_MAX_LENGTH=2147483647
    PUBLIC SQLITE_MAX_COLUMN=32767
    PUBLIC SQLITE_MAX_SQL_LENGTH=1073741824
    PUBLIC SQLITE_MAX_FUNCTION_ARG=127
    PUBLIC SQLITE_MAX_ATTACHED=125
    PUBLIC SQLITE_MAX_PAGE_COUNT=4294967294
    PUBLIC SQLITE_DISABLE_PAGECACHE_OVERFLOW_STATS
)

add_library(
        ${PACKAGE_NAME}
        SHARED
        ../../jvmNative/cpp/sqlite_bindings.cpp
)

target_link_libraries(
        ${PACKAGE_NAME}
        PRIVATE
        sqlite3
        ${CMAKE_THREAD_LIBS_INIT}
)